* {
    margin: 0;
    padding: 0;
    /* CSSのbox-sizingでは、要素の幅と高さに「paddingとborderを含めるかどうか」を指定します。
    初期値はcontent-boxであり、このままでは「含まない」という指定になります。
    含まない場合、要素の幅を100%にしたときなどに、paddingとborderの分だけ外側にはみ出るようになります。
    要素の中身、padding、borderの合計値を100%に合わせる必要があり、指定が面倒になりますね。
    値をborder-boxにすると、含めるという指定になります。 */
    box-sizing: border-box;
}
section {
    display: flex;
    justify-content: center;
    align-items: center;
    /* 100vhは、スマホの画面の高さを示します。 min-widthプロパティとmin-heightプロパティは、ボックスの幅と高さの最小値を指定します*/
    min-height: 100vh;
    background: #042104;
    animation: animateBg 10s linear infinite;
}
@keyframes animateBg {
    0% {
        /* ある要素に色相変換効果を付けるには、filterプロパティのhue-rotate関数を使用します。 */
        filter: hue-rotate(0deg);
    }
    100% {
        filter: hue-rotate(360deg);
    }
}
section .loader {
    position: relative;
    width: 120px;
    height: 120px;
    animation: animateBg 10s linear infinite;
}
section .loader span {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* rotate()は、要素の回転を指定するtransformの値です。 */
    transform: rotate(calc(18deg * var(--i)));
}
/* before 選択した要素の最初の子要素 */
section .loader span::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background: #00fa0a;
    box-shadow: 0 0 10px #00fa0a,
                0 0 20px #00fa0a,
                0 0 40px #00fa0a,
                0 0 60px #00fa0a,
                0 0 80px #00fa0a,
                0 0 100px #00fa0a;
    animation: animate 2s linear infinite;
    /* animation-delayプロパティの値には、アニメーションの開始を遅らせる時間を指定します。 初期値は0でアニメーションがすぐに実行されます。 */
    animation-delay: calc(0.1s * var(--i));
}
@keyframes animate {
    0% {
        transform: scale(1);
    }
    80%, 100% {
        transform: scale(0);
    }
}



